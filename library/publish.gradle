apply plugin: 'maven-publish'
apply plugin: 'com.jfrog.bintray'


if (project.gradle.startParameter.taskNames.contains("bintray")) {
    String oldVersion = getProperty("PROJ_VERSION")
    int index = oldVersion.lastIndexOf(".")
    def version
    if (index == -1) {
        version = Integer.toString(Integer.parseInt(oldVersion.substring(0)) + 1)
    } else {
        version = oldVersion.substring(0, index + 1) + Integer.toString(Integer.parseInt(oldVersion.substring(index + 1)) + 1)
    }
    println "update version from ${oldVersion} to ${version} "
}

afterEvaluate {
    def task = tasks.findByName("bintrayUpload")
    if (task != null) {
        task.doLast {
            if (!it.didWork) {
                return
            }
            String oldVersion = getProperty("PROJ_VERSION")
            def version
            int index = oldVersion.lastIndexOf(".")
            if (index == -1) {
                version = Integer.toString(Integer.parseInt(oldVersion) + 1)
            } else {
                version = oldVersion.substring(0, index + 1) + Integer.toString(Integer.parseInt(oldVersion.substring(index + 1)) + 1)
            }
            println "upload success write new version ${version} to file"
            def propertiesFile = file("${projectDir}/gradle.properties")
            def newContent = propertiesFile.getText("UTF-8").replace(oldVersion, version)
            propertiesFile.withWriter { out ->
                out << newContent
            }
        }
    }
}

task sourcesJar(type: Jar) {
    from sourceSets.main.groovy.srcDirs
    classifier = 'sources'
}

def javaApiUrl = 'http://docs.oracle.com/javase/1.7.0/docs/api/'
def groovyApiUrl = 'http://groovy.codehaus.org/gapi/'
tasks.withType(Javadoc) {
    options.links(javaApiUrl, groovyApiUrl)
}
task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

javadoc {
    options {
        encoding "UTF-8"
        charSet 'UTF-8'
        author true
        version true
        links "http://docs.oracle.com/javase/7/docs/api"
        title getProperty("PROJ_ARTIFACTID")
    }
}



// Create the pom configuration:
def pomConfig = {
    licenses {
        license {
            name "The Apache Software License, Version 2.0"
            url "http://www.apache.org/licenses/LICENSE-2.0.txt"
            distribution "repo"
        }
    }

    scm {
        url "https://github.com/cantalou/IncrementalCompilePlugin"
    }
}

// Create the publication with the pom configuration:
publishing {
    publications {
        MyPublication(MavenPublication) {
            from components.java
            artifact sourcesJar
            artifact javadocJar
            groupId getProperty("PROJ_GROUP")
            artifactId getProperty("PROJ_ARTIFACTID")
            version getProperty("PROJ_VERSION")
            pom.withXml {
                def root = asNode()
                root.appendNode('description', 'Your description of the lib')
                root.appendNode('name', 'incrementalBuild')
                root.children().last() + pomConfig
            }
        }
    }
}


bintray {
    user = getProperty("BINTRAY_USER")
    key = getProperty("BINTRAY_KEY")
    publications = ['MyPublication']

    publish = true //[Default: false] Whether version should be auto published after an upload
    pkg {
        repo = 'maven'
        userOrg = user
        name = getProperty("PROJ_NAME")
        desc = getProperty("PROJ_DESCRIPTION")
        websiteUrl = getProperty("PROJ_WEBSITEURL")
        issueTrackerUrl = getProperty("PROJ_ISSUETRACKERURL")
        vcsUrl = getProperty("PROJ_VCSURL")
        licenses = ['Apache-2.0']
        publicDownloadNumbers = true
        publish = true
        version {
            name = getProperty("PROJ_VERSION")
            vcsTag = getProperty("PROJ_VERSION")
        }
    }
}